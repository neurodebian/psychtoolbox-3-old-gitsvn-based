diff --git a/Psychtoolbox/PsychBasic/LoadClut.m b/Psychtoolbox/PsychBasic/LoadClut.m
index ebaa513..eac1b99 100644
--- a/Psychtoolbox/PsychBasic/LoadClut.m
+++ b/Psychtoolbox/PsychBasic/LoadClut.m
@@ -63,7 +63,7 @@ function err = LoadClut(windowPtr,clut,startEntry,bits)
 %                 different implementation in the OpenGL Psychtoolbox.
 
 % Check the arguments
-if nargin<2 | nargin>4
+if nargin<2 || nargin>4
 	error('USAGE: LoadClut(windowPtr,clut,[startEntry],[bits])');
 end
 
@@ -71,7 +71,7 @@ if nargin<4
 	bits=8;
 end
 
-if nargin<3 | isempty(startEntry)
+if nargin<3 || isempty(startEntry)
 	startEntry=0;
 end
 
diff --git a/Psychtoolbox/PsychCal/CalDataFolder.m b/Psychtoolbox/PsychCal/CalDataFolder.m
index cf2be10..ae6e0f3 100644
--- a/Psychtoolbox/PsychCal/CalDataFolder.m
+++ b/Psychtoolbox/PsychCal/CalDataFolder.m
@@ -15,7 +15,7 @@ function directory=CalDataFolder(forceDemo)
 %               "forceDemo" used to be "alt"
 
 % Set forceDemo flag
-if (nargin < 1 | isempty(forceDemo))
+if (nargin < 1 || isempty(forceDemo))
 	forceDemo = 0;
 end
 
diff --git a/Psychtoolbox/PsychCal/CompareMonCal.m b/Psychtoolbox/PsychCal/CompareMonCal.m
index 8391e14..762276b 100644
--- a/Psychtoolbox/PsychCal/CompareMonCal.m
+++ b/Psychtoolbox/PsychCal/CompareMonCal.m
@@ -17,7 +17,7 @@ function isSame = CompareMonCal(cal1,cal2,IGNOREDATE)
 % 3/10/98  dhb	     Change name to CompareMonCal.
 % 7/3/98   dhb, pbe  Change for cal.describe format.
 
-if (nargin < 3 | isempty(IGNOREDATE))
+if (nargin < 3 || isempty(IGNOREDATE))
 	IGNOREDATE = 0;
 end
 
diff --git a/Psychtoolbox/PsychCal/ContrastMatch.m b/Psychtoolbox/PsychCal/ContrastMatch.m
index 74cf9ff..d4481ad 100644
--- a/Psychtoolbox/PsychCal/ContrastMatch.m
+++ b/Psychtoolbox/PsychCal/ContrastMatch.m
@@ -32,7 +32,7 @@ function weight=ContrastMatch(device,dimWeight,foreColor,backColor)
 % 7/19/98 dgp  Removed obsolete TIMER.
 % 6/30/03 dgp Updated Screen OpenScreen to Screen OpenWindow.
 
-if nargin<2 | nargout>1
+if nargin<2 || nargout>1
 	error('Usage: weight=GratingMatch(device,dimWeight,[foreColor],[backColor])');
 end
 if nargin<4
diff --git a/Psychtoolbox/PsychCal/DescribeMonCal.m b/Psychtoolbox/PsychCal/DescribeMonCal.m
index d7b95b4..24125ce 100644
--- a/Psychtoolbox/PsychCal/DescribeMonCal.m
+++ b/Psychtoolbox/PsychCal/DescribeMonCal.m
@@ -24,10 +24,10 @@ function same = DescribeMonCal(cal,file,whichScreen)
 %                    Comparison of computer name skipped, because it seems to vary with login. 
 
 % Default args
-if (nargin < 2 | isempty(file))
+if (nargin < 2 || isempty(file))
 	file = 1;
 end
-if (nargin < 3 | isempty(whichScreen))
+if (nargin < 3 || isempty(whichScreen))
 	file = 1;
 	whichScreen = [];
 end
diff --git a/Psychtoolbox/PsychCal/FindSpectralPeaks.m b/Psychtoolbox/PsychCal/FindSpectralPeaks.m
index ebfbf52..bcfb802 100644
--- a/Psychtoolbox/PsychCal/FindSpectralPeaks.m
+++ b/Psychtoolbox/PsychCal/FindSpectralPeaks.m
@@ -14,11 +14,11 @@ function peaks = FindSpectralPeaks(spectrum,S,noiseLevel)
 % 1/6/96		dhb		Wrote it.
 % 5/17/99   dhb   Added  noiseLevel parameter.
 
-if (nargin < 2 | isempty(S))
+if (nargin < 2 || isempty(S))
 	S = [380 5 81];
 end
 wls = MakeItWls(S);
-if (nargin < 3 | isempty(noiseLevel))
+if (nargin < 3 || isempty(noiseLevel))
 	noiseLevel = 0;
 end
 
diff --git a/Psychtoolbox/PsychCal/FlushCalFile.m b/Psychtoolbox/PsychCal/FlushCalFile.m
index e4d4344..ddd5589 100644
--- a/Psychtoolbox/PsychCal/FlushCalFile.m
+++ b/Psychtoolbox/PsychCal/FlushCalFile.m
@@ -18,12 +18,12 @@ function FlushCalFile(filespec,nKeep)
 % 8/21/00  dhb  Update for dual cal dir scheme.  Not tested hard.
 
 % Set nKeep
-if (nargin < 2 | isempty(nKeep))
+if (nargin < 2 || isempty(nKeep))
 	nKeep = 1;
 end
 
 % Set the filename
-if (nargin < 1 | isempty(filespec))
+if (nargin < 1 || isempty(filespec))
 	filename = [CalDataFolder 'default.mat'];
 elseif (isstr(filespec))
 	filename = [CalDataFolder filespec '.mat'];
@@ -35,9 +35,9 @@ end
 file=fopen(filename);
 
 % If not, make sure to try secondary directory.
-if (file == -1 & (nargin < 3 | isempty(dir)))
+if (file == -1 & (nargin < 3 || isempty(dir)))
 	useDir = CalDataFolder(1);
-	if (nargin < 1 | isempty(filespec))
+	if (nargin < 1 || isempty(filespec))
 		filename = [useDir 'default.mat'];
 	elseif (isstr(filespec))
 		filename = [useDir filespec '.mat'];
diff --git a/Psychtoolbox/PsychCal/GratingNull.m b/Psychtoolbox/PsychCal/GratingNull.m
index 77965b8..cef6770 100644
--- a/Psychtoolbox/PsychCal/GratingNull.m
+++ b/Psychtoolbox/PsychCal/GratingNull.m
@@ -30,11 +30,11 @@ function foreWeight=GratingNull(device,message,forePart,blendPeriodPix,foreColor
 %              -Replace Chicago font with Arial because it's available on both Mac and Windows
 
 if sscanf(version,'%f',1)<5
-	if nargin<4 | nargin>8 | nargout>1 | ~isstr(message)
+	if nargin<4 || nargin>8 || nargout>1 || ~isstr(message)
 		error('Usage:	foreWeight=GratingNull(device,message,forePart,blendPeriodPix,[foreColor],[backColor],[viewingDistanceM],[dpi])');
 	end
 else
-	if nargin<4 | nargin>8 | nargout>1 | ~ischar(message)
+	if nargin<4 || nargin>8 || nargout>1 || ~ischar(message)
 		error('Usage:	foreWeight=GratingNull(device,message,forePart,blendPeriodPix,[foreColor],[backColor],[viewingDistanceM],[dpi])');
 	end
 end
diff --git a/Psychtoolbox/PsychCal/MeasMonXYZ.m b/Psychtoolbox/PsychCal/MeasMonXYZ.m
index db0e1c4..d958fa3 100644
--- a/Psychtoolbox/PsychCal/MeasMonXYZ.m
+++ b/Psychtoolbox/PsychCal/MeasMonXYZ.m
@@ -33,7 +33,7 @@ function XYZ = MeasMonXYZ(window,settings,syncMode,whichMeterType)
 
 % Check args and make sure window is passed right.
 usageStr = 'XYZ = MeasMonXYZ(window,settings,[syncMode],[whichMeterType])';
-if (nargin < 2 | nargin > 4 | nargout > 1)
+if (nargin < 2 || nargin > 4 || nargout > 1)
 	error(usageStr);
 end
 if (size(window,1) ~= 1 | size(window,2) ~= 1)
@@ -45,10 +45,10 @@ defaultSync = 0;
 defaultWhichMeterType = 1;
 
 % Check args and set defaults
-if (nargin < 4 | isempty(whichMeterType))
+if (nargin < 4 || isempty(whichMeterType))
 	whichMeterType = defaultWhichMeterType;
 end
-if (nargin < 3 | isempty(syncMode))
+if (nargin < 3 || isempty(syncMode))
 	syncMode = defaultSync;
 end
 
diff --git a/Psychtoolbox/PsychCal/UpdateAmbient.m b/Psychtoolbox/PsychCal/UpdateAmbient.m
index 5bfc94e..6c2ce45 100644
--- a/Psychtoolbox/PsychCal/UpdateAmbient.m
+++ b/Psychtoolbox/PsychCal/UpdateAmbient.m
@@ -33,7 +33,7 @@ function cal = UpdateAmbient(cal,newP_ambient,ADD)
 % 5/2/02    dhb, kr  Add ADD flag.
 
 % Set default on optional argument.
-if (nargin < 3 | isempty(ADD))
+if (nargin < 3 || isempty(ADD))
 	ADD = 0;
 end
 
diff --git a/Psychtoolbox/PsychCal/UpdateAmbientSensor.m b/Psychtoolbox/PsychCal/UpdateAmbientSensor.m
index f59651a..d128a17 100644
--- a/Psychtoolbox/PsychCal/UpdateAmbientSensor.m
+++ b/Psychtoolbox/PsychCal/UpdateAmbientSensor.m
@@ -26,7 +26,7 @@ if (size(new_ambient_sensor,1) ~= size(cal.ambient_linear,1) | ...
 end
 
 % Set default on optional argument.
-if (nargin < 3 | isempty(ADD))
+if (nargin < 3 || isempty(ADD))
 	ADD = 0;
 end
 
diff --git a/Psychtoolbox/PsychColorimetric/CheckWls.m b/Psychtoolbox/PsychColorimetric/CheckWls.m
index 997925c..fc08185 100644
--- a/Psychtoolbox/PsychColorimetric/CheckWls.m
+++ b/Psychtoolbox/PsychColorimetric/CheckWls.m
@@ -22,7 +22,7 @@ function [errorRet] = CheckWls(wls1,wls2,quiet)
 % 1/4/00   mpr  Added quiet flag to suppress display.
 % 4/22/04  dhb  Make quiet the default.
 
-if nargin < 3 | isempty(quiet)
+if nargin < 3 || isempty(quiet)
   quiet = 1;
 end
 
diff --git a/Psychtoolbox/PsychColorimetric/EffectiveTrolandsFromLum.m b/Psychtoolbox/PsychColorimetric/EffectiveTrolandsFromLum.m
index 7386150..29d18a5 100644
--- a/Psychtoolbox/PsychColorimetric/EffectiveTrolandsFromLum.m
+++ b/Psychtoolbox/PsychColorimetric/EffectiveTrolandsFromLum.m
@@ -26,7 +26,7 @@ function [trolands] = EffectiveTrolandsFromLum(lum,method)
 % 7/11/03 dhb  More general method naming. 
 
 % Set default methods
-if (nargin < 2 | isempty(method))
+if (nargin < 2 || isempty(method))
 	method = 'PokornySmith1';
 end
 
diff --git a/Psychtoolbox/PsychColorimetric/IsomerizationsFromAbsorptions.m b/Psychtoolbox/PsychColorimetric/IsomerizationsFromAbsorptions.m
index 1029b6b..da9b0da 100644
--- a/Psychtoolbox/PsychColorimetric/IsomerizationsFromAbsorptions.m
+++ b/Psychtoolbox/PsychColorimetric/IsomerizationsFromAbsorptions.m
@@ -12,7 +12,7 @@ function [isomerizationRate] = IsomerizationsFromAbsorbtions(photonAbsorptionRat
 % 07/25/03 dhb    Take default value from data routine. 
 
 % Set default efficiency.
-if (nargin < 2 | isempty(quantalEfficiency))
+if (nargin < 2 || isempty(quantalEfficiency))
 	quantalEfficiency = PhotopigmentQuantalEfficiency('FovealMCone','Human','Generic')* ...
 		ones(size(photonAbsorptionRate));
 end
diff --git a/Psychtoolbox/PsychColorimetric/LumToRadiance.m b/Psychtoolbox/PsychColorimetric/LumToRadiance.m
index 3d68d72..8fed70c 100644
--- a/Psychtoolbox/PsychColorimetric/LumToRadiance.m
+++ b/Psychtoolbox/PsychColorimetric/LumToRadiance.m
@@ -14,7 +14,7 @@ function [radiance, radianceS] =...
 % 7/29/03   dhb  Wrote it.
 
 % Default
-if (nargin < 4 | isempty(photopic))
+if (nargin < 4 || isempty(photopic))
 	photopic = 'Photopic';
 end
 S = [380 1 401];
diff --git a/Psychtoolbox/PsychColorimetric/RetIrradianceToIsoRecSec.m b/Psychtoolbox/PsychColorimetric/RetIrradianceToIsoRecSec.m
index ea1b6ce..5e187ed 100644
--- a/Psychtoolbox/PsychColorimetric/RetIrradianceToIsoRecSec.m
+++ b/Psychtoolbox/PsychColorimetric/RetIrradianceToIsoRecSec.m
@@ -24,7 +24,7 @@ function [isoPerConeSec,absPerConeSec,photoreceptors] = ...
 %
 % 7/25/03  dhb  Wrote it by pulling in code from elsewhere.
 
-if (nargin < 3 | isempty(photoreceptors))
+if (nargin < 3 || isempty(photoreceptors))
 	photoreceptors = DefaultPhotoreceptors('LivingHumanFovea');
 	photoreceptors = FillInPhotoreceptors(photoreceptors);
 end
diff --git a/Psychtoolbox/PsychColorimetric/RetIrradianceToTrolands.m b/Psychtoolbox/PsychColorimetric/RetIrradianceToTrolands.m
index 16b1273..2713d5c 100644
--- a/Psychtoolbox/PsychColorimetric/RetIrradianceToTrolands.m
+++ b/Psychtoolbox/PsychColorimetric/RetIrradianceToTrolands.m
@@ -16,10 +16,10 @@ function [trolands] =...
 %	07/18/03  dhb  Wrote it.
 
 % Fill in default values
-if (nargin < 4 | isempty(photopic))
+if (nargin < 4 || isempty(photopic))
 	photopic = 'Photopic';
 end
-if (nargin < 5 | isempty(species))
+if (nargin < 5 || isempty(species))
 	species = 'Human';
 end
 S = irradianceS;
diff --git a/Psychtoolbox/PsychColorimetric/SplineRaw.m b/Psychtoolbox/PsychColorimetric/SplineRaw.m
index 4dd63ee..61085cd 100644
--- a/Psychtoolbox/PsychColorimetric/SplineRaw.m
+++ b/Psychtoolbox/PsychColorimetric/SplineRaw.m
@@ -17,7 +17,7 @@ function [spec_out] = SplineRaw(wls_in, spec_in, wls_out, extend)
 % 7/26/03  dhb  Add extend argument
 
 % Default value for extend
-if (nargin < 4 | isempty(extend))
+if (nargin < 4 || isempty(extend))
 	extend = 0;
 end
 
diff --git a/Psychtoolbox/PsychColorimetric/TrolandsToRetIrradiance.m b/Psychtoolbox/PsychColorimetric/TrolandsToRetIrradiance.m
index 3ca9656..3edae95 100644
--- a/Psychtoolbox/PsychColorimetric/TrolandsToRetIrradiance.m
+++ b/Psychtoolbox/PsychColorimetric/TrolandsToRetIrradiance.m
@@ -21,10 +21,10 @@ function [irradianceWatts, irradianceS] =...
 % 1/26/04   ly, dhb 		Fix JuddVos path through switch. 
 
 % Fill in default values
-if (nargin < 4 | isempty(photopic))
+if (nargin < 4 || isempty(photopic))
 	photopic = 'Photopic';
 end
-if (nargin < 5 | isempty(species))
+if (nargin < 5 || isempty(species))
 	species = 'Human';
 end
 S = relativeSpectrumS;
diff --git a/Psychtoolbox/PsychColorimetricData/DefaultPhotoreceptors.m b/Psychtoolbox/PsychColorimetricData/DefaultPhotoreceptors.m
index cfc81b8..4d4e6ba 100644
--- a/Psychtoolbox/PsychColorimetricData/DefaultPhotoreceptors.m
+++ b/Psychtoolbox/PsychColorimetricData/DefaultPhotoreceptors.m
@@ -14,7 +14,7 @@ function photoreceptors = DefaultPhotoreceptors(kind)
 % 12/04/07 dhb  Added dog parameters
 
 % Default
-if (nargin < 1 | isempty(kind))
+if (nargin < 1 || isempty(kind))
 	kind = 'LivingHumanFovea';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/EyeLength.m b/Psychtoolbox/PsychColorimetricData/EyeLength.m
index 5730372..5bbcaf4 100644
--- a/Psychtoolbox/PsychColorimetricData/EyeLength.m
+++ b/Psychtoolbox/PsychColorimetricData/EyeLength.m
@@ -30,10 +30,10 @@ function eyeLengthMM = EyeLength(species,source)
 % 
 
 % Fill in defaults
-if (nargin < 1 | isempty(species))
+if (nargin < 1 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 2 | isempty(source))
+if (nargin < 2 || isempty(source))
 	source = 'LeGrand';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/LensTransmittance.m b/Psychtoolbox/PsychColorimetricData/LensTransmittance.m
index e237bbe..e0cfc85 100644
--- a/Psychtoolbox/PsychColorimetricData/LensTransmittance.m
+++ b/Psychtoolbox/PsychColorimetricData/LensTransmittance.m
@@ -20,10 +20,10 @@ function lensTransmit = LensTransmittance(S,species,source)
 % 7/26/03 dhb  Extend functions, rather than zero truncate.
 
 % Default
-if (nargin < 2 | isempty(species))
+if (nargin < 2 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 3 | isempty(source))
+if (nargin < 3 || isempty(source))
 	source = 'StockmanSharpe';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/MacularTransmittance.m b/Psychtoolbox/PsychColorimetricData/MacularTransmittance.m
index ad29963..543d22e 100644
--- a/Psychtoolbox/PsychColorimetricData/MacularTransmittance.m
+++ b/Psychtoolbox/PsychColorimetricData/MacularTransmittance.m
@@ -22,10 +22,10 @@ function macTransmit = MacularTransmittance(S,species,source)
 % 7/26/03 dhb  Extend functions, rather than zero truncate.
 
 % Default
-if (nargin < 2 | isempty(species))
+if (nargin < 2 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 3 | isempty(source))
+if (nargin < 3 || isempty(source))
 	source = 'WyszeckiStiles';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/PhotopigmentAxialDensity.m b/Psychtoolbox/PsychColorimetricData/PhotopigmentAxialDensity.m
index ae4bfdb..de939c7 100644
--- a/Psychtoolbox/PsychColorimetricData/PhotopigmentAxialDensity.m
+++ b/Psychtoolbox/PsychColorimetricData/PhotopigmentAxialDensity.m
@@ -33,10 +33,10 @@ function densities = PhotopigmentAxialDensity(receptorTypes,species,source)
 % 7/11/03  dhb  Wrote it.
 
 % Fill in defaults
-if (nargin < 2 | isempty(species))
+if (nargin < 2 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 3 | isempty(source))
+if (nargin < 3 || isempty(source))
 	source = 'Rodieck';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/PhotopigmentNomogram.m b/Psychtoolbox/PsychColorimetricData/PhotopigmentNomogram.m
index 101347c..9634b6d 100644
--- a/Psychtoolbox/PsychColorimetricData/PhotopigmentNomogram.m
+++ b/Psychtoolbox/PsychColorimetricData/PhotopigmentNomogram.m
@@ -12,7 +12,7 @@ function T_absorbance = PhotopigmentNomogram(S,lambdaMax,source)
 % 7/11/03  dhb  Wrote it.
 % 7/16/03  dhb  Add StockmanSharpe.
 
-if (nargin < 3 | isempty(source))
+if (nargin < 3 || isempty(source))
 	source = 'Govardovskii';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/PhotopigmentQuantalEfficiency.m b/Psychtoolbox/PsychColorimetricData/PhotopigmentQuantalEfficiency.m
index cd3aaf2..d46be00 100644
--- a/Psychtoolbox/PsychColorimetricData/PhotopigmentQuantalEfficiency.m
+++ b/Psychtoolbox/PsychColorimetricData/PhotopigmentQuantalEfficiency.m
@@ -19,10 +19,10 @@ function quantalEfficiencies = PhotopigmentQuantalEfficiency(receptorTypes,speci
 % 7/25/03  dhb  Wrote it.
 
 % Fill in defaults
-if (nargin < 2 | isempty(species))
+if (nargin < 2 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 3 | isempty(source))
+if (nargin < 3 || isempty(source))
 	source = 'Rodieck';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/PhotopigmentSpecificDensity.m b/Psychtoolbox/PsychColorimetricData/PhotopigmentSpecificDensity.m
index 0ecd56c..0355efc 100644
--- a/Psychtoolbox/PsychColorimetricData/PhotopigmentSpecificDensity.m
+++ b/Psychtoolbox/PsychColorimetricData/PhotopigmentSpecificDensity.m
@@ -36,10 +36,10 @@ function densities = PhotopigmentSpecificDensity(receptorTypes,species,source)
 % 7/11/03  dhb  Wrote it.
 
 % Fill in defaults
-if (nargin < 2 | isempty(species))
+if (nargin < 2 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 3 | isempty(source))
+if (nargin < 3 || isempty(source))
 	source = 'Rodieck';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/PhotoreceptorDimensions.m b/Psychtoolbox/PsychColorimetricData/PhotoreceptorDimensions.m
index af8a6aa..2a24b40 100644
--- a/Psychtoolbox/PsychColorimetricData/PhotoreceptorDimensions.m
+++ b/Psychtoolbox/PsychColorimetricData/PhotoreceptorDimensions.m
@@ -42,10 +42,10 @@ function dimensions = PhotoreceptorDimensions(receptorTypes,whichDimension,speci
 % 12/04/07 dhb  Added dog but with placeholder numbers.
 
 % Fill in defaults
-if (nargin < 3 | isempty(species))
+if (nargin < 3 || isempty(species))
 	species = 'Human';
 end
-if (nargin < 4 | isempty(source))
+if (nargin < 4 || isempty(source))
 	source = 'Rodieck';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/PupilDiameterFromLum.m b/Psychtoolbox/PsychColorimetricData/PupilDiameterFromLum.m
index 9d5d988..31124e3 100644
--- a/Psychtoolbox/PsychColorimetricData/PupilDiameterFromLum.m
+++ b/Psychtoolbox/PsychColorimetricData/PupilDiameterFromLum.m
@@ -61,7 +61,7 @@ function [diam,area,trolands] = PupilDiameterFromLum(lum,source)
 % 12/4/07 dhb  Added dog case, with a place holder number of 8 mm.
 
 % Set default methods
-if (nargin < 2 | isempty(source))
+if (nargin < 2 || isempty(source))
 	source = 'PokornySmith';
 end
 
diff --git a/Psychtoolbox/PsychColorimetricData/ValetonVanNorrenParams.m b/Psychtoolbox/PsychColorimetricData/ValetonVanNorrenParams.m
index 3ff0843..c6f8000 100644
--- a/Psychtoolbox/PsychColorimetricData/ValetonVanNorrenParams.m
+++ b/Psychtoolbox/PsychColorimetricData/ValetonVanNorrenParams.m
@@ -32,15 +32,15 @@ function [params] = ValetonVanNorrenParams(logIsoRate,photoreceptors,trolandType
 % 7/18/03  dhb  Started writing it.
 
 % Fill in default
-if (nargin < 2 | isempty(photoreceptors))
+if (nargin < 2 || isempty(photoreceptors))
 	photoreceptors = DefaultPhotoreceptors('LivingHumanFovea');
 	photoreceptors.macularPigmentDensity.source = 'None';	
 	photoreceptors = FillInPhotoreceptors(photoreceptors);
 end
-if (nargin < 3 | isempty(trolandType))
+if (nargin < 3 || isempty(trolandType))
 	trolandType = 'Photopic';
 end
-if (nargin < 4 | isempty(LMRatio))
+if (nargin < 4 || isempty(LMRatio))
 	LMRatio = 2;
 end
 
diff --git a/Psychtoolbox/PsychHardware/BitsPlusToolbox/BitsPlusPackColorImage.m b/Psychtoolbox/PsychHardware/BitsPlusToolbox/BitsPlusPackColorImage.m
index 0e96df4..f54a67a 100644
--- a/Psychtoolbox/PsychHardware/BitsPlusToolbox/BitsPlusPackColorImage.m
+++ b/Psychtoolbox/PsychHardware/BitsPlusToolbox/BitsPlusPackColorImage.m
@@ -19,10 +19,10 @@ function outImage = BitsPlusPackColorImage(inImage,SPACESCALE,COLORSCALE)
 % 26.2.07   mk      Bugfix for LSB conversion: Added modulo operation.
 % 3/01/07   mk      Bugfix for MSB conversion: Added floor operation.
 
-if (nargin < 2 | isempty(SPACESCALE))
+if (nargin < 2 || isempty(SPACESCALE))
 	SPACESCALE = 1;
 end
-if (nargin < 3 | isempty(COLORSCALE))
+if (nargin < 3 || isempty(COLORSCALE))
 	COLORSCALE = 1;
 end
 
diff --git a/Psychtoolbox/PsychHardware/Daq/DaqCIn.m b/Psychtoolbox/PsychHardware/Daq/DaqCIn.m
index 216a47a..ddeb6b1 100644
--- a/Psychtoolbox/PsychHardware/Daq/DaqCIn.m
+++ b/Psychtoolbox/PsychHardware/Daq/DaqCIn.m
@@ -24,7 +24,7 @@ if isempty(TheDevices)
     TheDevices = PsychHID('Devices');
 end
 
-if ~nargin | isempty(daq)
+if ~nargin || isempty(daq)
   daq=DaqFind;
 end
 
diff --git a/Psychtoolbox/PsychHardware/Daq/DaqCInit.m b/Psychtoolbox/PsychHardware/Daq/DaqCInit.m
index 9d766e7..e47e3df 100644
--- a/Psychtoolbox/PsychHardware/Daq/DaqCInit.m
+++ b/Psychtoolbox/PsychHardware/Daq/DaqCInit.m
@@ -20,7 +20,7 @@ if isempty(TheDevices)
     TheDevices = PsychHID('Devices');
 end
 
-if ~nargin | isempty(daq)
+if ~nargin || isempty(daq)
   daq=DaqFind;
 end
 
diff --git a/Psychtoolbox/PsychHardware/Daq/DaqDeviceIndex.m b/Psychtoolbox/PsychHardware/Daq/DaqDeviceIndex.m
index 3da141d..55aca44 100644
--- a/Psychtoolbox/PsychHardware/Daq/DaqDeviceIndex.m
+++ b/Psychtoolbox/PsychHardware/Daq/DaqDeviceIndex.m
@@ -95,7 +95,7 @@ else
     otherwise
       error('I did not recognize your specified device name.');
   end % switch DeviceName
-end % if ~nargin | isempty(DeviceName)
+end % if ~nargin || isempty(DeviceName)
 
 NumInterfaces = [];
 
diff --git a/Psychtoolbox/PsychHardware/Daq/DaqGetStatus.m b/Psychtoolbox/PsychHardware/Daq/DaqGetStatus.m
index 1187c92..083538a 100644
--- a/Psychtoolbox/PsychHardware/Daq/DaqGetStatus.m
+++ b/Psychtoolbox/PsychHardware/Daq/DaqGetStatus.m
@@ -14,7 +14,7 @@ function status=DaqGetStatus(daq)
 % 1/11/08   mpr swept through trying to improve consistency across daq
 %                 functions
 
-if ~nargin | isempty(daq)
+if ~nargin || isempty(daq)
   daq = DaqFind;
 end
 
diff --git a/Psychtoolbox/PsychHardware/Daq/DaqPrepareDownload.m b/Psychtoolbox/PsychHardware/Daq/DaqPrepareDownload.m
index c116aca..d1d0245 100644
--- a/Psychtoolbox/PsychHardware/Daq/DaqPrepareDownload.m
+++ b/Psychtoolbox/PsychHardware/Daq/DaqPrepareDownload.m
@@ -23,7 +23,7 @@ function err=DaqPrepareDownload(daq,WhichMode)
 % 1/11/08   mpr   swept through attempting to improve consistency across
 %                   daq functions
 
-if ~nargin | isempty(daq)
+if ~nargin || isempty(daq)
   daq = DaqDeviceIndex;
   switch length(daq)
     case 0,
@@ -34,7 +34,7 @@ if ~nargin | isempty(daq)
   end
 end
 
-if nargin < 2 | isempty(WhichMode)
+if nargin < 2 || isempty(WhichMode)
   WhichMode = 1;
 end
 
diff --git a/Psychtoolbox/PsychHardware/Daq/Utilities/TwoStateQuery.m b/Psychtoolbox/PsychHardware/Daq/Utilities/TwoStateQuery.m
index 4502477..cfee9a4 100644
--- a/Psychtoolbox/PsychHardware/Daq/Utilities/TwoStateQuery.m
+++ b/Psychtoolbox/PsychHardware/Daq/Utilities/TwoStateQuery.m
@@ -24,7 +24,7 @@ function UserResponse = TwoStateQuery(TheQuestion,TheChoices)
 %           1/14/07 mpr   undid previoius fix because button color bug is almost
 %                             fixed
 
-if nargin < 2 | isempty(TheChoices)
+if nargin < 2 || isempty(TheChoices)
 	TheChoices{1} = 'Yes';
 	TheChoices{2} = 'No';
 elseif length(TheChoices) ~= 2 | ~iscell(TheChoices)
diff --git a/Psychtoolbox/PsychHardware/EyelinkToolbox/EyelinkOneLiners/testeyelinksounds.m b/Psychtoolbox/PsychHardware/EyelinkToolbox/EyelinkOneLiners/testeyelinksounds.m
index a1d6208..405bd07 100755
--- a/Psychtoolbox/PsychHardware/EyelinkToolbox/EyelinkOneLiners/testeyelinksounds.m
+++ b/Psychtoolbox/PsychHardware/EyelinkToolbox/EyelinkOneLiners/testeyelinksounds.m
@@ -18,7 +18,7 @@ else
 end
 % if no default values are supplied open
 % a structure here
-if nargin==0 | (nargin==1 & isempty(el) )
+if nargin==0 || (nargin==1 & isempty(el) )
 	el=initeyelinkdefaults;
 end
 
diff --git a/Psychtoolbox/PsychHardware/MeasXYZ.m b/Psychtoolbox/PsychHardware/MeasXYZ.m
index cf44fce..75d9458 100644
--- a/Psychtoolbox/PsychHardware/MeasXYZ.m
+++ b/Psychtoolbox/PsychHardware/MeasXYZ.m
@@ -23,7 +23,7 @@ function [XYZ,qual] = MeasXYZ(meterType)
 % 2/26/03   dhb   Change definition of meter type for PR-650 to 1.
 
 % Handle defaults
-if (nargin < 1 | isempty(meterType))
+if (nargin < 1 || isempty(meterType))
     meterType = 1;
 end
 
diff --git a/Psychtoolbox/PsychOneliners/GrayIndex.m b/Psychtoolbox/PsychOneliners/GrayIndex.m
index 830eb49..56a3094 100644
--- a/Psychtoolbox/PsychOneliners/GrayIndex.m
+++ b/Psychtoolbox/PsychOneliners/GrayIndex.m
@@ -25,7 +25,7 @@ function gray=GrayIndex(w,r)
 %
 % 10/3/99	dgp     Wrote it.
 
-if nargin<1 | nargin>2
+if nargin<1 || nargin>2
 	error('Usage: color=GrayIndex(windowPtrOrScreenNumber,[reflectance])');
 end
 if nargin<2
diff --git a/Psychtoolbox/PsychOneliners/MakeBeep.m b/Psychtoolbox/PsychOneliners/MakeBeep.m
index 4cf7d7c..ef2290b 100755
--- a/Psychtoolbox/PsychOneliners/MakeBeep.m
+++ b/Psychtoolbox/PsychOneliners/MakeBeep.m
@@ -25,10 +25,10 @@ function [beep,samplingRate] = MakeBeep(freq,duration,samplingRate)
 % 4/13/02   dgp       Make the default samplingRate platform dependent, to match Snd.
 % 4/13/02   dgp       Get the default samplingRate from Snd.
 
-if nargin<2 | isempty(duration)
+if nargin<2 || isempty(duration)
 	error('Usage: beep=MakeBeep(freq,duration,[samplingRate]);')
 end
-if nargin<3 | isempty(samplingRate)
+if nargin<3 || isempty(samplingRate)
 	samplingRate = Snd('DefaultRate');
 end
 beep = sin(2*pi*freq*(0:duration*samplingRate)/samplingRate);
diff --git a/Psychtoolbox/PsychOneliners/NearestResolution.m b/Psychtoolbox/PsychOneliners/NearestResolution.m
index d5c8bce..0c54576 100644
--- a/Psychtoolbox/PsychOneliners/NearestResolution.m
+++ b/Psychtoolbox/PsychOneliners/NearestResolution.m
@@ -22,7 +22,7 @@ function res=NearestResolution(screenNumber,width,height,hz,pixelSize)
 % 9/23/07 mk  Adapted for Psychtoolbox-3.
 % 2/28/08 mk  Fix parsing, error handling and documentation...
 
-if nargin<2 | nargin>5
+if nargin<2 || nargin>5
 	error(sprintf('%s\n%s','USAGE: res=NearestResolution(screenNumber,[width,height,hz,pixelSize])',...
                        '           res=NearestResolution(screenNumber [,width][,height][,hz][,pixelSize])',...
 	                   '           res=NearestResolution(screenNumber,desiredRes)'));
diff --git a/Psychtoolbox/PsychOneliners/WrapString.m b/Psychtoolbox/PsychOneliners/WrapString.m
index 2faeb9c..4e125d5 100644
--- a/Psychtoolbox/PsychOneliners/WrapString.m
+++ b/Psychtoolbox/PsychOneliners/WrapString.m
@@ -21,7 +21,7 @@ function wrappedString=WrapString(string,maxLineLength)
 % 10/2/02 dgp Make it clear that maxLineLength is in characters, not pixels.
 % 09/20/09 mk Improve argument handling as per suggestion of Peter April.
 
-if nargin>2 | nargout>1 %#ok<OR2>
+if nargin>2 || nargout>1 %#ok<OR2>
 	error('Usage: wrappedString=WrapString(string,[maxLineLength])\n');
 end
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/glFeedbackBuffer.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/glFeedbackBuffer.m
index 787c20c..de53e17 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/glFeedbackBuffer.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/glFeedbackBuffer.m
@@ -44,15 +44,15 @@ function glFeedbackBuffer(  bufsize, buftype, bufferptr )
 % ---allocate---
 % ---protected---
 
-if nargin < 1 | isempty(bufsize) | bufsize <1
+if nargin < 1 || isempty(bufsize) || bufsize <1
 error('Missing or invalid bufsize argument.');
 end;
 
-if nargin < 2 | isempty(buftype)
+if nargin < 2 || isempty(buftype)
 error('Missing buftype argument.');
 end;
 
-if nargin < 3 | isempty(bufferptr)
+if nargin < 3 || isempty(bufferptr)
 error('Missing bufferptr argument.');
 end;
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/glSelectBuffer.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/glSelectBuffer.m
index 8a4ef01..e40ebe3 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/glSelectBuffer.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/glSelectBuffer.m
@@ -20,11 +20,11 @@ function glSelectBuffer( bufsize, bufferptr )
 % ---allocate---
 % ---protected---
 
-if nargin < 1 | isempty(bufsize) | bufsize <1
+if nargin < 1 || isempty(bufsize) || bufsize <1
 error('Missing or invalid bufsize argument.');
 end;
 
-if nargin < 3 | isempty(bufferptr)
+if nargin < 3 || isempty(bufferptr)
 error('Missing bufferptr argument.');
 end;
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglcalloc.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglcalloc.m
index e3718bf..77d0d11 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglcalloc.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglcalloc.m
@@ -25,11 +25,11 @@ function ptr = moglcalloc(nelements, nrbytes)
 
 % ---protected---
 
-if nargin < 1 | isempty(nelements) | nelements <1
+if nargin < 1 || isempty(nelements) || nelements <1
    error('moglcalloc: Invalid or missing nelements size value for requested buffer.');
 end;
 
-if nargin < 2 | isempty(nrbytes) | nrbytes <1
+if nargin < 2 || isempty(nrbytes) || nrbytes <1
    error('moglcalloc: Invalid or missing nrbytes size value for requested buffer.');
 end;
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglfree.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglfree.m
index 84e956b..cfe14a2 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglfree.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglfree.m
@@ -16,7 +16,7 @@ function moglfree(ptr)
 
 % ---protected---
 
-if nargin < 1 | isempty(ptr)
+if nargin < 1 || isempty(ptr)
    error('moglfree: Missing pointer to buffer for release.');
 end;
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglgetbuffer.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglgetbuffer.m
index fce668d..6806d55 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglgetbuffer.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglgetbuffer.m
@@ -17,15 +17,15 @@ function outmatrix = moglgetbuffer(ptr, mattype, nrbytes)
 
 % ---protected---
 
-  if nargin < 1 | isempty(ptr)
+  if nargin < 1 || isempty(ptr)
      error('Missing required argument ptr.');
      end;
 
-  if nargin < 2 | isempty(mattype)
+  if nargin < 2 || isempty(mattype)
      error('Missing required argument mattype.');
      end;
 
-  if nargin < 3 | isempty(nrbytes) | nrbytes < 0
+  if nargin < 3 || isempty(nrbytes) || nrbytes < 0
      error('Missing or invalid (negative) argument nrbytes.');
      end;
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglmalloc.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglmalloc.m
index a226459..3386d76 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglmalloc.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglmalloc.m
@@ -19,7 +19,7 @@ function ptr = moglmalloc(nrbytes)
 
 % ---protected---
 
-if nargin < 1 | isempty(nrbytes) | nrbytes <1
+if nargin < 1 || isempty(nrbytes) || nrbytes <1
    error('moglmalloc: Invalid or missing nrbytes size value for requested buffer.');
 end;
 
diff --git a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglputbuffer.m b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglputbuffer.m
index 9d60308..2c269d5 100644
--- a/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglputbuffer.m
+++ b/Psychtoolbox/PsychOpenGL/MOGL/wrap/moglputbuffer.m
@@ -13,15 +13,15 @@ function moglputbuffer(inputmatrix, ptr, nrbytes)
 
 % ---protected---
 
-  if nargin < 1 | isempty(inputmatrix)
+  if nargin < 1 || isempty(inputmatrix)
      error('Missing required argument inputmatrix.');
      end;
 
-  if nargin < 2 | isempty(ptr)
+  if nargin < 2 || isempty(ptr)
      error('Missing required argument ptr.');
      end;
 
-  if nargin < 3 | isempty(nrbytes) | nrbytes < 1
+  if nargin < 3 || isempty(nrbytes) || nrbytes < 1
      error('Missing or invalid (smaller than 1) argument nrbytes.');
      end;
 
diff --git a/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/Eyetrackertest.m b/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/Eyetrackertest.m
index 1d90d74..73d4dc1 100644
--- a/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/Eyetrackertest.m
+++ b/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/Eyetrackertest.m
@@ -26,7 +26,7 @@ global GL;
     key4 = Kbname('4$');
     
     % Assign default name for test-image or test-movie:
-    if nargin < 1 | isempty(moviename)
+    if nargin < 1 || isempty(moviename)
         moviename = [];
     end;
     moviename
diff --git a/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/OldEyetrackertest.m b/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/OldEyetrackertest.m
index acc5e15..2821a88 100644
--- a/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/OldEyetrackertest.m
+++ b/Psychtoolbox/PsychOpenGL/PsychGLEyetracking/OldEyetrackertest.m
@@ -10,7 +10,7 @@ global rayvisdisplaylist;
 try
     
     % Assign default name for test-image or test-movie:
-    if nargin < 1 | isempty(imfilename)
+    if nargin < 1 || isempty(imfilename)
         if IsWin
             imfilename='U:/test/eyeroi.jpg';
         end;
diff --git a/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/Create2DGaussianBlurShader.m b/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/Create2DGaussianBlurShader.m
index 9c80f03..6840957 100755
--- a/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/Create2DGaussianBlurShader.m
+++ b/Psychtoolbox/PsychOpenGL/PsychGLSLShaders/Create2DGaussianBlurShader.m
@@ -34,7 +34,7 @@ if nargin < 1
     stddev = 2.5;
 end;
 
-if nargin < 2 | isempty(width)
+if nargin < 2 || isempty(width)
     width = 11;
 end;
 
diff --git a/Psychtoolbox/PsychProbability/RandSample.m b/Psychtoolbox/PsychProbability/RandSample.m
index ce17c52..843db8c 100644
--- a/Psychtoolbox/PsychProbability/RandSample.m
+++ b/Psychtoolbox/PsychProbability/RandSample.m
@@ -20,7 +20,7 @@ function x=RandSample(list,dims)
 % 7/24/04 awi Cosmetic.
 % 12/13/04 dgp & kat Enhanced to support cell arrays.
 
-if nargin<1 | nargin>2 | min(size(list))~=1
+if nargin<1 || nargin>2 || min(size(list))~=1
 	error('Usage: x=RandSample(list,[dims])')
 end
 if nargin==1
diff --git a/Psychtoolbox/PsychProbability/Randi.m b/Psychtoolbox/PsychProbability/Randi.m
index 5673da7..28231a5 100644
--- a/Psychtoolbox/PsychProbability/Randi.m
+++ b/Psychtoolbox/PsychProbability/Randi.m
@@ -15,7 +15,7 @@ function i=Randi(n,dims)
 % 7/24/04     awi  Cosmetic
 % 1/29/05     dgp  Changed default dims from 1 to [1 1].
 
-if nargin<1 | nargin>2 | cumprod(size(n))~=1
+if nargin<1 || nargin>2 || cumprod(size(n))~=1
 	error('Usage: i=Randi(n,[dims])')
 end
 if nargin==1
diff --git a/Psychtoolbox/PsychRects/ArrangeRects.m b/Psychtoolbox/PsychRects/ArrangeRects.m
index 4cc1545..f4f5eaf 100644
--- a/Psychtoolbox/PsychRects/ArrangeRects.m
+++ b/Psychtoolbox/PsychRects/ArrangeRects.m
@@ -34,7 +34,7 @@ function cellRects=ArrangeRects(n,objectRect,windowRect,rightToLeft);
 % Dividing them gives us nx=sqrt(n/a).
 % We then alternately find the smallest integers nx and ny with a product of at least than n.
 
-if nargin<3 | nargin>4 
+if nargin<3 || nargin>4 
     error('Usage: cellRects=ArrangeRects(n,objectRect,windowRect,[rightToLeft]);'); 
 end
 if size(objectRect,2)~=4 | size(windowRect,2)~=4
diff --git a/Psychtoolbox/PsychSignal/Bandpass.m b/Psychtoolbox/PsychSignal/Bandpass.m
index e02f5cf..266c303 100755
--- a/Psychtoolbox/PsychSignal/Bandpass.m
+++ b/Psychtoolbox/PsychSignal/Bandpass.m
@@ -10,7 +10,7 @@ function w=Bandpass(n,fLow,fHigh)
 % 1994   dgp       Wrote it
 % 7/3/96 jny & dgp Replaced erroneous formula for freqs by FREQSPACE. 
 
-if nargin<2 | nargin>3
+if nargin<2 || nargin>3
 	error('Usage: w=Bandpass(n,fLow,[fHigh])')
 end
 if nargin<3
diff --git a/Psychtoolbox/PsychSignal/Expand.m b/Psychtoolbox/PsychSignal/Expand.m
index c3d2727..545e33d 100755
--- a/Psychtoolbox/PsychSignal/Expand.m
+++ b/Psychtoolbox/PsychSignal/Expand.m
@@ -15,7 +15,7 @@ function A=Expand(A,horizontalFactor,verticalFactor)
 % Denis Pelli 5/27/96, 6/14/96, 7/6/96
 % 7/24/02 dgp Support an arbitrary number of dimensions.
 
-if nargin<2 | nargin>3
+if nargin<2 || nargin>3
 	error('Usage: A=Expand(A,horizontalFactor,[verticalFactor])');
 end
 if nargin==2
diff --git a/Psychtoolbox/Psychometric/FitWeibTAFC.m b/Psychtoolbox/Psychometric/FitWeibTAFC.m
index 02a373d..36f3087 100644
--- a/Psychtoolbox/Psychometric/FitWeibTAFC.m
+++ b/Psychtoolbox/Psychometric/FitWeibTAFC.m
@@ -36,7 +36,7 @@ lineParams = [inputs ones(size(inputs))]\(nCorrect ./ (nCorrect+nError) );
 slope = lineParams(1);
 
 % Initial parameters
-if (nargin <= 3 | isempty(alpha0))
+if (nargin <= 3 || isempty(alpha0))
 	x0(1) = mean(inputs);
 else 
 	x0(1) = alpha0;
diff --git a/Psychtoolbox/Psychometric/FitWeibYN.m b/Psychtoolbox/Psychometric/FitWeibYN.m
index e0880f3..445f2ea 100644
--- a/Psychtoolbox/Psychometric/FitWeibYN.m
+++ b/Psychtoolbox/Psychometric/FitWeibYN.m
@@ -37,7 +37,7 @@ lineParams = [inputs ones(size(inputs))]\(nYes ./ (nYes+nNo) );
 slope = lineParams(1);
 
 % Initial parameters
-if (nargin <= 3 | isempty(alpha0))
+if (nargin <= 3 || isempty(alpha0))
 	x0(1) = mean(inputs);
 else 
 	x0(1) = alpha0;
diff --git a/Psychtoolbox/Quest/QuestBetaAnalysis.m b/Psychtoolbox/Quest/QuestBetaAnalysis.m
index 7646d22..68ed291 100755
--- a/Psychtoolbox/Quest/QuestBetaAnalysis.m
+++ b/Psychtoolbox/Quest/QuestBetaAnalysis.m
@@ -18,7 +18,7 @@ function betaEstimate=QuestBetaAnalysis(q,fid)
 % 8/23/99 dgp streamlined the printout
 % 8/24/99 dgp add sd's to printout
 % 10/13/04 dgp added comment explaining 1/beta
-if nargin<1 | nargin>2
+if nargin<1 || nargin>2
 	error('Usage: QuestBetaAnalysis(q,[fid])')
 end
 if nargin<2
diff --git a/Psychtoolbox/Quest/QuestCreate.m b/Psychtoolbox/Quest/QuestCreate.m
index 0614022..7d8c032 100755
--- a/Psychtoolbox/Quest/QuestCreate.m
+++ b/Psychtoolbox/Quest/QuestCreate.m
@@ -103,7 +103,7 @@ function q=QuestCreate(tGuess,tGuessSd,pThreshold,beta,delta,gamma,grain,range)
 % 10/13/04 	dgp  Set q.normalizePdf to 1, to avoid underflow errors that otherwise accur after around 1000 trials.
 % 
 % Copyright (c) 1996-2004 Denis Pelli
-if nargin<6 | nargin>8
+if nargin<6 || nargin>8
 	error('Usage: q=QuestCreate(tGuess,tGuessSd,pThreshold,beta,delta,gamma,[grain],[range])')
 end
 if nargin<7
